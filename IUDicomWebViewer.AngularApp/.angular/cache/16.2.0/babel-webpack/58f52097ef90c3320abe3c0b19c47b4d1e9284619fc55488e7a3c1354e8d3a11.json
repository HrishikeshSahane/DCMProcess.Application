{"ast":null,"code":"/*! @azure/msal-browser v3.6.0 2023-12-01 */\n'use strict';\n\nimport { AuthError } from '@azure/msal-common';\nimport { storageNotSupported, stubbedPublicClientApplicationCalled, inMemRedirectUnavailable } from './BrowserConfigurationAuthErrorCodes.mjs';\nimport * as BrowserConfigurationAuthErrorCodes from './BrowserConfigurationAuthErrorCodes.mjs';\nexport { BrowserConfigurationAuthErrorCodes };\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst BrowserConfigurationAuthErrorMessages = {\n  [storageNotSupported]: \"Given storage configuration option was not supported.\",\n  [stubbedPublicClientApplicationCalled]: \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\",\n  [inMemRedirectUnavailable]: \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\"\n};\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use BrowserAuthErrorCodes instead\n */\nconst BrowserConfigurationAuthErrorMessage = {\n  storageNotSupportedError: {\n    code: storageNotSupported,\n    desc: BrowserConfigurationAuthErrorMessages[storageNotSupported]\n  },\n  stubPcaInstanceCalled: {\n    code: stubbedPublicClientApplicationCalled,\n    desc: BrowserConfigurationAuthErrorMessages[stubbedPublicClientApplicationCalled]\n  },\n  inMemRedirectUnavailable: {\n    code: inMemRedirectUnavailable,\n    desc: BrowserConfigurationAuthErrorMessages[inMemRedirectUnavailable]\n  }\n};\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nclass BrowserConfigurationAuthError extends AuthError {\n  constructor(errorCode, errorMessage) {\n    super(errorCode, errorMessage);\n    this.name = \"BrowserConfigurationAuthError\";\n    Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\n  }\n}\nfunction createBrowserConfigurationAuthError(errorCode) {\n  return new BrowserConfigurationAuthError(errorCode, BrowserConfigurationAuthErrorMessages[errorCode]);\n}\nexport { BrowserConfigurationAuthError, BrowserConfigurationAuthErrorMessage, BrowserConfigurationAuthErrorMessages, createBrowserConfigurationAuthError };\n//# sourceMappingURL=BrowserConfigurationAuthError.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}