{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { formatError } from \"./logging\";\n/**\n * Ensures the scopes value is an array.\n * @internal\n */\nexport function ensureScopes(scopes) {\n  return Array.isArray(scopes) ? scopes : [scopes];\n}\n/**\n * Throws if the received scope is not valid.\n * @internal\n */\nexport function ensureValidScopeForDevTimeCreds(scope, logger) {\n  if (!scope.match(/^[0-9a-zA-Z-_.:/]+$/)) {\n    const error = new Error(\"Invalid scope was specified by the user or calling client\");\n    logger.getToken.info(formatError(scope, error));\n    throw error;\n  }\n}\n/**\n * Returns the resource out of a scope.\n * @internal\n */\nexport function getScopeResource(scope) {\n  return scope.replace(/\\/.default$/, \"\");\n}\n//# sourceMappingURL=scopeUtils.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}