{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { createAbortablePromise } from \"./createAbortablePromise\";\nconst StandardAbortMessage = \"The delay was aborted.\";\n/**\n * A wrapper for setTimeout that resolves a promise after timeInMs milliseconds.\n * @param timeInMs - The number of milliseconds to be delayed.\n * @param options - The options for delay - currently abort options\n * @returns Promise that is resolved after timeInMs\n */\nexport function delay(timeInMs, options) {\n  let token;\n  const {\n    abortSignal,\n    abortErrorMsg\n  } = options !== null && options !== void 0 ? options : {};\n  return createAbortablePromise(resolve => {\n    token = setTimeout(resolve, timeInMs);\n  }, {\n    cleanupBeforeAbort: () => clearTimeout(token),\n    abortSignal,\n    abortErrorMsg: abortErrorMsg !== null && abortErrorMsg !== void 0 ? abortErrorMsg : StandardAbortMessage\n  });\n}\n//# sourceMappingURL=delay.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}