{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nfunction createConfigurationErrorMessage(tenantId) {\n  return `The current credential is not configured to acquire tokens for tenant ${tenantId}. To enable acquiring tokens for this tenant add it to the AdditionallyAllowedTenants on the credential options, or add \"*\" to AdditionallyAllowedTenants to allow acquiring tokens for any tenant.`;\n}\n/**\n * Of getToken contains a tenantId, this functions allows picking this tenantId as the appropriate for authentication,\n * unless multitenant authentication has been disabled through the AZURE_IDENTITY_DISABLE_MULTITENANTAUTH (on Node.js),\n * or unless the original tenant Id is `adfs`.\n * @internal\n */\nexport function processMultiTenantRequest(tenantId, getTokenOptions, additionallyAllowedTenantIds = []) {\n  var _a;\n  let resolvedTenantId;\n  if (tenantId === \"adfs\") {\n    resolvedTenantId = tenantId;\n  } else {\n    resolvedTenantId = (_a = getTokenOptions === null || getTokenOptions === void 0 ? void 0 : getTokenOptions.tenantId) !== null && _a !== void 0 ? _a : tenantId;\n  }\n  if (tenantId && resolvedTenantId !== tenantId && !additionallyAllowedTenantIds.includes(\"*\") && !additionallyAllowedTenantIds.some(t => t.localeCompare(resolvedTenantId) === 0)) {\n    throw new Error(createConfigurationErrorMessage(tenantId));\n  }\n  return resolvedTenantId;\n}\n//# sourceMappingURL=processMultiTenantRequest.browser.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}