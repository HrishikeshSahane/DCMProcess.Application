{"ast":null,"code":"/*! @azure/msal-browser v3.6.0 2023-12-01 */\n'use strict';\n\nimport _asyncToGenerator from \"D:/Hrishikesh/IUBH/Thesis/PoC/DICOMImageProcessing_Application/IUDicomWebViewer.AngularApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BaseOperatingContext } from './BaseOperatingContext.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nlet UnknownOperatingContext = /*#__PURE__*/(() => {\n  class UnknownOperatingContext extends BaseOperatingContext {\n    /**\n     * Return the module name.  Intended for use with import() to enable dynamic import\n     * of the implementation associated with this operating context\n     * @returns\n     */\n    getModuleName() {\n      return UnknownOperatingContext.MODULE_NAME;\n    }\n    /**\n     * Returns the unique identifier for this operating context\n     * @returns string\n     */\n    getId() {\n      return UnknownOperatingContext.ID;\n    }\n    /**\n     * Checks whether the operating context is available.\n     * Confirms that the code is running a browser rather.  This is required.\n     * @returns Promise<boolean> indicating whether this operating context is currently available.\n     */\n    initialize() {\n      return _asyncToGenerator(function* () {\n        /**\n         * This operating context is in use when we have not checked for what the operating context is.\n         * The context is unknown until we check it.\n         */\n        return true;\n      })();\n    }\n  }\n  /*\n   * TODO: Once we have determine the bundling code return here to specify the name of the bundle\n   * containing the implementation for this operating context\n   */\n\n  /**\n   * Unique identifier for the operating context\n   */\n  UnknownOperatingContext.MODULE_NAME = \"\";\n  UnknownOperatingContext.ID = \"UnknownOperatingContext\";\n  return UnknownOperatingContext;\n})();\nexport { UnknownOperatingContext };\n//# sourceMappingURL=UnknownOperatingContext.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}