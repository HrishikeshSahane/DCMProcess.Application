{"ast":null,"code":"/*! @azure/msal-browser v3.6.0 2023-12-01 */\n'use strict';\n\nimport _asyncToGenerator from \"D:/Hrishikesh/IUBH/Thesis/PoC/DICOMImageProcessing_Application/IUDicomWebViewer.AngularApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { StandardInteractionClient } from './StandardInteractionClient.mjs';\nimport { PerformanceEvents, invokeAsync, RefreshTokenClient } from '@azure/msal-common';\nimport { ApiId } from '../utils/BrowserConstants.mjs';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { silentLogoutUnsupported } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass SilentRefreshClient extends StandardInteractionClient {\n  /**\n   * Exchanges the refresh token for new tokens\n   * @param request\n   */\n  acquireToken(request) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentRefreshClientAcquireToken, request.correlationId);\n      const baseRequest = yield invokeAsync(_this.initializeBaseRequest.bind(_this), PerformanceEvents.InitializeBaseRequest, _this.logger, _this.performanceClient, request.correlationId)(request, request.account);\n      const silentRequest = {\n        ...request,\n        ...baseRequest\n      };\n      const serverTelemetryManager = _this.initializeServerTelemetryManager(ApiId.acquireTokenSilent_silentFlow);\n      const refreshTokenClient = yield _this.createRefreshTokenClient(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions);\n      // Send request to renew token. Auth module will throw errors if token cannot be renewed.\n      return invokeAsync(refreshTokenClient.acquireTokenByRefreshToken.bind(refreshTokenClient), PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken, _this.logger, _this.performanceClient, request.correlationId)(silentRequest).catch(e => {\n        e.setCorrelationId(_this.correlationId);\n        serverTelemetryManager.cacheFailedRequest(e);\n        throw e;\n      });\n    })();\n  }\n  /**\n   * Currently Unsupported\n   */\n  logout() {\n    // Synchronous so we must reject\n    return Promise.reject(createBrowserAuthError(silentLogoutUnsupported));\n  }\n  /**\n   * Creates a Refresh Client with the given authority, or the default authority.\n   * @param serverTelemetryManager\n   * @param authorityUrl\n   */\n  createRefreshTokenClient(serverTelemetryManager, authorityUrl, azureCloudOptions) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      // Create auth module.\n      const clientConfig = yield invokeAsync(_this2.getClientConfiguration.bind(_this2), PerformanceEvents.StandardInteractionClientGetClientConfiguration, _this2.logger, _this2.performanceClient, _this2.correlationId)(serverTelemetryManager, authorityUrl, azureCloudOptions);\n      return new RefreshTokenClient(clientConfig, _this2.performanceClient);\n    })();\n  }\n}\nexport { SilentRefreshClient };\n//# sourceMappingURL=SilentRefreshClient.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}