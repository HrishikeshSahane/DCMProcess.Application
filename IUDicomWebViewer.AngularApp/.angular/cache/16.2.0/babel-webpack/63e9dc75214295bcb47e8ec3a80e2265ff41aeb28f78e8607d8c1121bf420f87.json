{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Users } from '../models/Users';\nimport { JWTClientDetails } from '../models/JWTClientDetails';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let IuDicomwebviewerService = /*#__PURE__*/(() => {\n  class IuDicomwebviewerService {\n    constructor(_httpclient) {\n      this._httpclient = _httpclient;\n      this.dataSubject = new BehaviorSubject(null);\n      this.data$ = this.dataSubject.asObservable();\n    }\n    getToken() {\n      var jwtclientDetails = new JWTClientDetails();\n      jwtclientDetails.ClientID = environment.clientId, jwtclientDetails.ClientSecret = environment.clientSecret;\n      return this._httpclient.post(environment.baseURL + \"security/createToken\", jwtclientDetails);\n    }\n    validateCredentials(emailId, password, tokenvalue) {\n      var userObj = new Users();\n      userObj.EmailId = emailId;\n      userObj.UserPassword = password;\n      console.log(userObj);\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${tokenvalue}`\n      });\n      return this._httpclient.post(environment.baseURL + \"User/Login\", userObj, {\n        headers\n      });\n    }\n    registerUser(registerUser, tokenvalue) {\n      console.log(tokenvalue);\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${tokenvalue}`\n      });\n      return this._httpclient.post(environment.baseURL + \"User/Register\", registerUser, {\n        headers\n      });\n    }\n    getAllPatients(tokenvalue) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${tokenvalue}`\n      });\n      return this._httpclient.get(environment.baseURL + \"Patient/GetPatientList\", {\n        headers\n      });\n    }\n    getScanDetailsbyPatientId(patientId, tokenvalue) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${tokenvalue}`\n      });\n      return this._httpclient.get(environment.baseURL + \"Patient/GetScanDetails?patientId=\" + patientId, {\n        headers\n      });\n    }\n    getHospitalDetailsbyPatientId(patientId, tokenvalue) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${tokenvalue}`\n      });\n      return this._httpclient.get(environment.baseURL + \"Institute/GetInstitutionDetails?patientId=\" + patientId, {\n        headers\n      });\n    }\n    // getBlobSasToken():Observable<string>{\n    //   return this._httpclient.get<string>(environment.baseURL+\"Storage/GetBlobSasToken\")\n    // }\n    setStudyId(data) {\n      console.log(data);\n      this.dataSubject.next(data);\n    }\n    static #_ = this.ɵfac = function IuDicomwebviewerService_Factory(t) {\n      return new (t || IuDicomwebviewerService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: IuDicomwebviewerService,\n      factory: IuDicomwebviewerService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return IuDicomwebviewerService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}