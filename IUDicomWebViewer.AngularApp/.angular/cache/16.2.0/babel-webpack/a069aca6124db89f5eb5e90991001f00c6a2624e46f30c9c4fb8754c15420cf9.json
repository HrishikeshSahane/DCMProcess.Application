{"ast":null,"code":"/*! @azure/msal-common v14.5.0 2023-12-01 */\n'use strict';\n\nimport { Constants } from '../utils/Constants.mjs';\nimport { unexpectedError, postRequestFailed } from './AuthErrorCodes.mjs';\nimport * as AuthErrorCodes from './AuthErrorCodes.mjs';\nexport { AuthErrorCodes };\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst AuthErrorMessages = {\n  [unexpectedError]: \"Unexpected error in authentication.\",\n  [postRequestFailed]: \"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.\"\n};\n/**\n * AuthErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use AuthErrorCodes instead\n */\nconst AuthErrorMessage = {\n  unexpectedError: {\n    code: unexpectedError,\n    desc: AuthErrorMessages[unexpectedError]\n  },\n  postRequestFailed: {\n    code: postRequestFailed,\n    desc: AuthErrorMessages[postRequestFailed]\n  }\n};\n/**\n * General error class thrown by the MSAL.js library.\n */\nclass AuthError extends Error {\n  constructor(errorCode, errorMessage, suberror) {\n    const errorString = errorMessage ? `${errorCode}: ${errorMessage}` : errorCode;\n    super(errorString);\n    Object.setPrototypeOf(this, AuthError.prototype);\n    this.errorCode = errorCode || Constants.EMPTY_STRING;\n    this.errorMessage = errorMessage || Constants.EMPTY_STRING;\n    this.subError = suberror || Constants.EMPTY_STRING;\n    this.name = \"AuthError\";\n  }\n  setCorrelationId(correlationId) {\n    this.correlationId = correlationId;\n  }\n}\nfunction createAuthError(code, additionalMessage) {\n  return new AuthError(code, additionalMessage ? `${AuthErrorMessages[code]} ${additionalMessage}` : AuthErrorMessages[code]);\n}\nexport { AuthError, AuthErrorMessage, AuthErrorMessages, createAuthError };\n//# sourceMappingURL=AuthError.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}