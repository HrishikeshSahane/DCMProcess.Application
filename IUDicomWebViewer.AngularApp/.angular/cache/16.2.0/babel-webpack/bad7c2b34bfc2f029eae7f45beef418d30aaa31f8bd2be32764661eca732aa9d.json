{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __rest } from \"tslib\";\n/**\n * Converts an OperationOptions to a RequestOptionsBase\n *\n * @param opts - OperationOptions object to convert to RequestOptionsBase\n */\nexport function operationOptionsToRequestOptionsBase(opts) {\n  const {\n      requestOptions,\n      tracingOptions\n    } = opts,\n    additionalOptions = __rest(opts, [\"requestOptions\", \"tracingOptions\"]);\n  let result = additionalOptions;\n  if (requestOptions) {\n    result = Object.assign(Object.assign({}, result), requestOptions);\n  }\n  if (tracingOptions) {\n    result.tracingContext = tracingOptions.tracingContext;\n    // By passing spanOptions if they exist at runtime, we're backwards compatible with @azure/core-tracing@preview.13 and earlier.\n    result.spanOptions = tracingOptions === null || tracingOptions === void 0 ? void 0 : tracingOptions.spanOptions;\n  }\n  return result;\n}\n//# sourceMappingURL=operationOptions.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}