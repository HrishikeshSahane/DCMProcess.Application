{"ast":null,"code":"/*! @azure/msal-browser v3.6.0 2023-12-01 */\n'use strict';\n\nimport { AuthError, InteractionRequiredAuthError, createInteractionRequiredAuthError, InteractionRequiredAuthErrorCodes } from '@azure/msal-common';\nimport { createBrowserAuthError } from './BrowserAuthError.mjs';\nimport { contentError, userSwitch } from './NativeAuthErrorCodes.mjs';\nimport { PERSISTENT_ERROR, DISABLED, NO_NETWORK, USER_CANCEL, USER_INTERACTION_REQUIRED, ACCOUNT_UNAVAILABLE } from '../broker/nativeBroker/NativeStatusCodes.mjs';\nimport { noNetworkConnectivity, userCancelled } from './BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst INVALID_METHOD_ERROR = -2147186943;\nconst NativeAuthErrorMessages = {\n  [userSwitch]: \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\"\n};\nclass NativeAuthError extends AuthError {\n  constructor(errorCode, description, ext) {\n    super(errorCode, description);\n    Object.setPrototypeOf(this, NativeAuthError.prototype);\n    this.name = \"NativeAuthError\";\n    this.ext = ext;\n  }\n}\n/**\n * These errors should result in a fallback to the 'standard' browser based auth flow.\n */\nfunction isFatalNativeAuthError(error) {\n  if (error.ext && error.ext.status && (error.ext.status === PERSISTENT_ERROR || error.ext.status === DISABLED)) {\n    return true;\n  }\n  if (error.ext && error.ext.error && error.ext.error === INVALID_METHOD_ERROR) {\n    return true;\n  }\n  switch (error.errorCode) {\n    case contentError:\n      return true;\n    default:\n      return false;\n  }\n}\n/**\n * Create the appropriate error object based on the WAM status code.\n * @param code\n * @param description\n * @param ext\n * @returns\n */\nfunction createNativeAuthError(code, description, ext) {\n  if (ext && ext.status) {\n    switch (ext.status) {\n      case ACCOUNT_UNAVAILABLE:\n        return createInteractionRequiredAuthError(InteractionRequiredAuthErrorCodes.nativeAccountUnavailable);\n      case USER_INTERACTION_REQUIRED:\n        return new InteractionRequiredAuthError(code, description);\n      case USER_CANCEL:\n        return createBrowserAuthError(userCancelled);\n      case NO_NETWORK:\n        return createBrowserAuthError(noNetworkConnectivity);\n    }\n  }\n  return new NativeAuthError(code, NativeAuthErrorMessages[code] || description, ext);\n}\nexport { NativeAuthError, NativeAuthErrorMessages, createNativeAuthError, isFatalNativeAuthError };\n//# sourceMappingURL=NativeAuthError.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}