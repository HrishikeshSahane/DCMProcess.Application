{"ast":null,"code":"/*! @azure/msal-common v14.5.0 2023-12-01 */\n'use strict';\n\nimport { PerformanceEventStatus } from './PerformanceEvent.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass StubPerformanceMeasurement {\n  startMeasurement() {\n    return;\n  }\n  endMeasurement() {\n    return;\n  }\n  flushMeasurement() {\n    return null;\n  }\n}\nclass StubPerformanceClient {\n  generateId() {\n    return \"callback-id\";\n  }\n  startMeasurement(measureName, correlationId) {\n    return {\n      end: () => null,\n      discard: () => {},\n      add: () => {},\n      increment: () => {},\n      event: {\n        eventId: this.generateId(),\n        status: PerformanceEventStatus.InProgress,\n        authority: \"\",\n        libraryName: \"\",\n        libraryVersion: \"\",\n        clientId: \"\",\n        name: measureName,\n        startTimeMs: Date.now(),\n        correlationId: correlationId || \"\"\n      },\n      measurement: new StubPerformanceMeasurement()\n    };\n  }\n  startPerformanceMeasurement() {\n    return new StubPerformanceMeasurement();\n  }\n  calculateQueuedTime() {\n    return 0;\n  }\n  addQueueMeasurement() {\n    return;\n  }\n  setPreQueueTime() {\n    return;\n  }\n  endMeasurement() {\n    return null;\n  }\n  discardMeasurements() {\n    return;\n  }\n  removePerformanceCallback() {\n    return true;\n  }\n  addPerformanceCallback() {\n    return \"\";\n  }\n  emitEvents() {\n    return;\n  }\n  addFields() {\n    return;\n  }\n  incrementFields() {\n    return;\n  }\n  cacheEventByCorrelationId() {\n    return;\n  }\n}\nexport { StubPerformanceClient, StubPerformanceMeasurement };\n//# sourceMappingURL=StubPerformanceClient.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}